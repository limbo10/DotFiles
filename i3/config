# for new style of config file following line is added
# i3 config file (v4)

# Startup Applications

exec_always --no-startup-id feh --bg-fill ~/D:/Downloads/WallPaper/forest_fog_deer_129931_3840x2160.jpg
exec_always --no-startup-id picom
exec_always --no-startup-id ~/.config/polybar/launch.sh
exec --no-startup-id alacritty


# ---------------------- i3 Configuration -------------------------------
set $mod Mod4
font pango:Work Sans 8

bindsym $mod+q kill
bindsym $mod+d exec --no-startup-id dmenu_run

bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+u split h
bindsym $mod+n split v

bindsym $mod+f fullscreen toggle

bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

bindsym $mod+a focus parent
bindsym $mod+c focus child

bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart

bindsym $mod+Return exec --no-startup-id alacritty

# Move floating container to the center of all outputs
bindsym $mod+x move absolute position center

# Constraining floating window size (width x height)
# -1 -> dimension will be unconstrained with respec to its maximum value
#  0 -> default value to constrain the size
floating_minimum_size 50 x 50
floating_maximum_size -1 x -1

# Border Styling (normal <x> | none | pixel <x>)
default_border none
default_floating_border normal


# Hiding Border Adjacement to the Screen Edge (none | vertical | horizontal | both | smart)
hide_edge_borders none

# Fast Switching between active workspace (yes | no)
workspace_auto_back_and_forth yes

# Making Marks on container
bindsym $mod+m exec --no-startup-id i3-input -F -toggle 'mark %s' -l 1 -P 'Mark: '
bindsym $mod+g exec --no-startup-id i3-input -F '[con_marks=%s] focus' -l 1 -P 'Goto: '

# Focus follow mouse
focus_follows_mouse no

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# show marks on window decoration
show_marks yes

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Orientation of New WorkSpaces
# horizontal | vertical | auto
default_orientation auto

# Layout mode for New Container
# default | stacking | tabbed
# workspace_layout tabbed

# Window title alignment
# title_align left | center | right

# Popup during fullscreen mode
# popup_during_fullscreen smart | ignore | leave_fullscreen
popup_during_fullscreen smart

# Toggle between stacking/tabbed/splith/splitv
bindsym $mod+y layout toggle all

# --------------------------- Window -----------------------------------j
for_window [class="Lxapperance"] enable floating
# for_window [class='spotify'] enable floating
# assign [class='spotify'] 3


# Sticky Window
# sticky enable | disable | toggle
# for_window [class=''] sticky enable

# ------------------------- WorkSpaces --------- | ignore | leave_fullscreen------------------------

set $ws1 "1" 
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Move to workspace with focused container
bindsym $mod+Ctrl+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8; workspace $ws8



# ------------------------- Resize Mode ------------------------------------

bindsym $mod+r mode "resize"

mode "resize" {
        bindsym h resize shrink width 1 px or 1 ppt
        bindsym j resize grow height 1 px or 1 ppt
        bindsym k resize shrink height 1 px or 1 ppt
        bindsym l resize grow width 1 px or 1 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}




# ------------------------------ Gaps ------------------------------------
# Only enable gaps on a workspace when there is at least one container
smart_gaps on

# Hide edge borders only if there is one window with no gaps
hide_edge_borders smart_no_gaps

set $inc 1
set $dec 1
set $z   0

gaps inner 2
gaps outer 0

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus $inc
        bindsym minus gaps outer current minus $dec
        bindsym 0     gaps outer current set $z

        bindsym Shift+plus  gaps outer all plus $inc
        bindsym Shift+minus gaps outer all minus $dec
        bindsym Shift+0     gaps outer all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus $inc
        bindsym minus gaps inner current minus $dec
        bindsym 0     gaps inner current set $z

        bindsym Shift+plus  gaps inner all plus $inc
        bindsym Shift+minus gaps inner all minus $dec
        bindsym Shift+0     gaps inner all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus $inc
        bindsym minus gaps horizontal current minus $dec
        bindsym 0     gaps horizontal current set $z

        bindsym Shift+plus  gaps horizontal all plus $inc
        bindsym Shift+minus gaps horizontal all minus $dec
        bindsym Shift+0     gaps horizontal all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus $inc
        bindsym minus gaps vertical current minus $dec
        bindsym 0     gaps vertical current set $z

        bindsym Shift+plus  gaps vertical all plus $inc
        bindsym Shift+minus gaps vertical all minus $dec
        bindsym Shift+0     gaps vertical all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus $inc
        bindsym minus gaps top current minus $dec
        bindsym 0     gaps top current set $z

        bindsym Shift+plus  gaps top all plus $inc
        bindsym Shift+minus gaps top all minus $dec
        bindsym Shift+0     gaps top all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus $inc
        bindsym minus gaps right current minus $dec
        bindsym 0     gaps right current set $z

        bindsym Shift+plus  gaps right all plus $inc
        bindsym Shift+minus gaps right all minus $dec
        bindsym Shift+0     gaps right all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus $inc
        bindsym minus gaps bottom current minus $dec
        bindsym 0     gaps bottom current set $z

        bindsym Shift+plus  gaps bottom all plus $inc
        bindsym Shift+minus gaps bottom all minus $dec
        bindsym Shift+0     gaps bottom all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus $inc
        bindsym minus gaps left current minus $dec
        bindsym 0     gaps left current set $z

        bindsym Shift+plus  gaps left all plus $inc
        bindsym Shift+minus gaps left all minus $dec
        bindsym Shift+0     gaps left all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

# --------------------------- i3exit Mode --------------------------------
set $Locker i3lock && sleep 1

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
bindsym $mod+z mode "$mode_system"
mode "$mode_system" {
    bindsym l exec --no-startup-id ~/.config/i3/scripts/LockScreen/lock.sh, mode "default" 
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use light to adjust brightness 
bindsym XF86MonBrightnessUp exec --no-startup-id sudo ~/.config/i3/scripts/IncBrightness.sh
bindsym XF86MonBrightnessDown exec --no-startup-id sudo ~/.config/i3/scripts/DecBrightness.sh

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec --no-startup-id "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"


# redshift modes
bindsym $mod+t mode "$mode_redshift"
set $mode_redshift Set Color Temp: (a)uto, (r)eset, (1)2500K, (2)3000K, (3)3500K, (4)4000K, (5)4500K
set $kill_redshift pkill -9 redshift;
mode "$mode_redshift" {
    bindsym a exec --no-startup-id "$kill_redshift redshift -P -t 5000:4000", mode "default"
    bindsym r exec --no-startup-id "$kill_redshift redshift -x", mode "default"
    bindsym 1 exec --no-startup-id "$kill_redshift redshift -P -O 2500", mode "default"
    bindsym 2 exec --no-startup-id "$kill_redshift redshift -P -O 3000", mode "default"
    bindsym 3 exec --no-startup-id "$kill_redshift redshift -P -O 3500", mode "default"
    bindsym 4 exec --no-startup-id "$kill_redshift redshift -P -O 4000", mode "default"
    bindsym 5 exec --no-startup-id "$kill_redshift redshift -P -O 4500", mode "default"

    # exit mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
