# for new style of config file following line is added
# i3 config file (v4)

# ---------------------- Startup Applications -------------------------------

# This will randomly choose a file in the given directory and set it as wallpaper
exec_always --no-startup-id feh --randomize --bg-fill ~/Downloads/WallPaper/Hollow\ Knight/

# This is start picom on startup
# exec_always --no-startup-id picom --experimental-backends
exec_always --no-startup-id picom

# This is to launch the Polybar Instances
# exec_always --no-startup-id ~/.config/polybar/launch.sh

# This is to source the Key Mapping File
exec_always --no-startup-id xmodmap ~/.Xmodmap

# This is to start redShift
# exec --no-startup-id "$kill_redShift redShift -P -O 5000"

# StartUp Green Clip
exec --no-startup-id greenclip daemon>/dev/null

# Swallow windows
exec --no-startup-id python3 $HOME/.config/i3/swallow.py




# ---------------------- i3 Configuration -------------------------------

# Set the mod key to the winkey:
# Mod1 => Alt | Mod4 => Window
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango: Noto Sans Regular 10

# Quit the window
bindsym $mod+Shift+q kill

# Start Up Application Launcher
bindsym $mod+Shift+d exec --no-startup-id rofi -show drun -config ~/.config/rofi/config.rasi

# Change focus
bindsym $mod+Shift+h focus left
bindsym $mod+Shift+j focus down
bindsym $mod+Shift+k focus up
bindsym $mod+Shift+l focus right

# Move focused window
bindsym $mod+Ctrl+h move left
bindsym $mod+Ctrl+j move down
bindsym $mod+Ctrl+k move up
bindsym $mod+Ctrl+l move right

# Split in Horizontal orientation
bindsym $mod+Shift+u split h
# Split in Vertical orientation
bindsym $mod+Shift+n split v

# Enter fullscreen mode for the focused container
bindsym $mod+Shift+f fullscreen toggle

# Change the default layout
bindsym $mod+Shift+s layout stacking
bindsym $mod+Shift+t layout tabbed
bindsym $mod+Shift+c layout toggle split

# Toggle tiling / floating
bindsym $mod+Ctrl+Space floating toggle

# Change focus between tiling / floating windows
bindsym $mod+Shift+Space focus mode_toggle

# Reload the configuration file
bindsym $mod+Ctrl+c reload

# Restart i3 inplace (preserves your layout/session, can be used to update i3)
bindsym $mod+Ctrl+r restart

# Start a terminal
bindsym $mod+Shift+Return exec --no-startup-id kitty

# Move floating container to the center of all outputs
# bindsym $mod+Shift+x move absolute position center

# Focus the parent container
# bindsym $mod+Shift+a focus parent

# Open new empty workspace
# bindsym $mod+Shift+n exec ~/.config/i3/scripts/empty_workspace

# Constraining floating window size (width x height)
# -1 -> dimension will be unconstrained with respec to its maximum value
#  0 -> default value to constrain the size
floating_minimum_size 0 x 0
floating_maximum_size 0 x 0

# Border Styling (normal <x> | none | pixel <x>)
default_border pixel 1
default_floating_border normal 1

# Hiding Border Adjacement to the Screen Edge (none | vertical | horizontal | both | smart)
hide_edge_borders none

# Fast Switching between active workspace (yes | no)
workspace_auto_back_and_forth yes

# Focus follow mouse
focus_follows_mouse no

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# show marks on window decoration
show_marks yes

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Orientation of New WorkSpaces
# horizontal | vertical | auto
default_orientation auto

# Layout mode for New Window
# default | stacking | tabbed
workspace_layout default

# Window title alignment
# title_align left | center | right
# title_align none

# Popup during fullscreen mode
# popup_during_fullscreen smart | ignore | leave_fullscreen
popup_during_fullscreen smart

# Toggle between stacking/tabbed/splith/splitv
bindsym $mod+y layout toggle all

# Move between workspace using Tab
bindsym $mod+Tab workspace next_on_output
bindsym $mod+Shift+Tab workspace prev_on_output





# --------------------------- Window -----------------------------------

assign [class="alacritty"] $ws1
assign [class="firefox"] $ws2
assign [class="Code"] $ws3
assign [class="discord"] $ws4
assign [class="p3x-onenote"] $ws4
assign [class="Spotify"] $ws9
assign [class="spotify"] $ws9
assign [class="VirtualBoxVM"] $ws9
assign [class="Deluge"] $ws8
assign [class="Deluge"] $ws8
assign [class="notion-app"] $ws10

# Sticky Window
# sticky enable | disable | toggle
# for_window [class=''] sticky enable





# ------------------------- WorkSpaces ---------------------------------

set $ws1 "1 "
set $ws2 "2 "
set $ws3 "3 "
set $ws4 "4 "
set $ws5 "5 "
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Move to workspace with focused container
bindsym $mod+Ctrl+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8; workspace $ws8



# ------------------------- Resize Mode ------------------------------------

bindsym $mod+Shift+r mode "resize"

mode "resize" {
        bindsym h resize shrink width 1 px or 1 ppt
        bindsym j resize grow height 1 px or 1 ppt
        bindsym k resize shrink height 1 px or 1 ppt
        bindsym l resize grow width 1 px or 1 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}


# ------------------------------ Gaps ------------------------------------

# Only enable gaps on a workspace when there is at least one container
smart_gaps on

# Hide edge borders only if there is one window with no gaps
hide_edge_borders smart_no_gaps

set $inc 1
set $dec 1
set $z   0

gaps inner 5
gaps outer -5

set $mode_gaps          Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft
set $mode_gaps_outer    Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner    Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_horiz    Horizontal Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_verti    Vertical Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_top      Top Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_right    Right Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_bottom   Bottom Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_left     Left Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus $inc
        bindsym minus gaps outer current minus $dec
        bindsym 0     gaps outer current set $z

        bindsym Shift+plus  gaps outer all plus $inc
        bindsym Shift+minus gaps outer all minus $dec
        bindsym Shift+0     gaps outer all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus $inc
        bindsym minus gaps inner current minus $dec
        bindsym 0     gaps inner current set $z

        bindsym Shift+plus  gaps inner all plus $inc
        bindsym Shift+minus gaps inner all minus $dec
        bindsym Shift+0     gaps inner all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym plus  gaps horizontal current plus $inc
        bindsym minus gaps horizontal current minus $dec
        bindsym 0     gaps horizontal current set $z

        bindsym Shift+plus  gaps horizontal all plus $inc
        bindsym Shift+minus gaps horizontal all minus $dec
        bindsym Shift+0     gaps horizontal all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym plus  gaps vertical current plus $inc
        bindsym minus gaps vertical current minus $dec
        bindsym 0     gaps vertical current set $z

        bindsym Shift+plus  gaps vertical all plus $inc
        bindsym Shift+minus gaps vertical all minus $dec
        bindsym Shift+0     gaps vertical all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym plus  gaps top current plus $inc
        bindsym minus gaps top current minus $dec
        bindsym 0     gaps top current set $z

        bindsym Shift+plus  gaps top all plus $inc
        bindsym Shift+minus gaps top all minus $dec
        bindsym Shift+0     gaps top all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym plus  gaps right current plus $inc
        bindsym minus gaps right current minus $dec
        bindsym 0     gaps right current set $z

        bindsym Shift+plus  gaps right all plus $inc
        bindsym Shift+minus gaps right all minus $dec
        bindsym Shift+0     gaps right all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym plus  gaps bottom current plus $inc
        bindsym minus gaps bottom current minus $dec
        bindsym 0     gaps bottom current set $z

        bindsym Shift+plus  gaps bottom all plus $inc
        bindsym Shift+minus gaps bottom all minus $dec
        bindsym Shift+0     gaps bottom all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym plus  gaps left current plus $inc
        bindsym minus gaps left current minus $dec
        bindsym 0     gaps left current set $z

        bindsym Shift+plus  gaps left all plus $inc
        bindsym Shift+minus gaps left all minus $dec
        bindsym Shift+0     gaps left all set $z

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}






# ----------------------------- Others -----------------------------------

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +1% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -1% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use light to adjust brightness
# bindsym XF86MonBrightnessUp exec --no-startup-id sudo ~/.config/i3/scripts/IncBrightness.sh
# bindsym XF86MonBrightnessDown exec --no-startup-id sudo ~/.config/i3/scripts/DecBrightness.sh

# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec --no-startup-id "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# redShift modes
bindsym $mod+t mode "$mode_redShift"
set $mode_redShift Set Color Temp: (a)uto, (r)eset, (1)2500K, (2)3000K, (3)3500K, (4)4000K, (5)4500K
set $kill_redShift pkill -9 redShift;
mode "$mode_redShift" {
    bindsym d exec --no-startup-id "$kill_redshift redshift -P -t 5000:4000", mode "default"
    bindsym 0 exec --no-startup-id "$kill_redshift redshift -x", mode "default"
    bindsym 1 exec --no-startup-id "$kill_redshift redshift -P -O 2250", mode "default"
    bindsym 2 exec --no-startup-id "$kill_redshift redshift -P -O 2500", mode "default"
    bindsym 3 exec --no-startup-id "$kill_redshift redshift -P -O 2750", mode "default"
    bindsym 4 exec --no-startup-id "$kill_redshift redshift -P -O 3000", mode "default"
    bindsym 5 exec --no-startup-id "$kill_redshift redshift -P -O 3250", mode "default"
    bindsym 6 exec --no-startup-id "$kill_redshift redshift -P -O 3500", mode "default"
    bindsym 7 exec --no-startup-id "$kill_redshift redshift -P -O 3750", mode "default"
    bindsym 8 exec --no-startup-id "$kill_redshift redshift -P -O 4000", mode "default"
    bindsym 9 exec --no-startup-id "$kill_redshift redshift -P -O 4250", mode "default"

    # exit mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Swapping
mode "swap" {
	# switch to workspace
	bindsym $mod+1 workspace $ws1
	bindsym $mod+2 workspace $ws2
	bindsym $mod+3 workspace $ws3
	bindsym $mod+4 workspace $ws4
	bindsym $mod+5 workspace $ws5
	bindsym $mod+6 workspace $ws6
	bindsym $mod+7 workspace $ws7
	bindsym $mod+8 workspace $ws8
	bindsym $mod+9 workspace $ws9
	bindsym $mod+0 workspace $ws10

	# change focus (without mod)
	bindsym h focus left
	bindsym j focus down
	bindsym k focus up
	bindsym l focus right

	bindsym Return swap container with mark "swapee"; unmark "swapee"; mode "default";
	bindsym Escape unmark "swapee"; mode "default";
}

bindsym $mod+Shift+m mark --add "swapee"; mode "swap"



# New Changes

# exit-menu
bindsym $mod+Shift+e exec --no-startup-id ~/.config/i3/scripts/powermenu

# Lock the system
bindsym $mod+Shift+l exec --no-startup-id ~/.config/i3/scripts/blur-lock
# lock with a picture:
#bindsym $mod+l exec i3lock -i  ~/.config/i3/i3-lock-screen.png -p default|win -t
# lock by blurring the screen:
# bindsym $mod+Shift+l exec ~/.config/i3/scripts/blur-lock


# /// this one is better than mine because it send notifications as well
# Backlight control
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight +1 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -1 && notify-send "Brightness - $(xbacklight -get | cut -d '.' -f 1)%"

# Add Notification to the Volume thing



# Redirect sound to headphones
bindsym $mod+p exec /usr/local/bin/switch-audio-port

# Power Profile menu switcher (rofi)
bindsym $mod+p exec ~/.config/i3/scripts/power-profiles

#Screen Shot
bindsym Print exec --no-startup-id scrot ~/%Y-%m-%d-%T-screenshot.png && notify-send "Screenshot saved to ~/$(date +"%Y-%m-%d-%T")-screenshot.png"

# Set powersavings for display:
exec --no-startup-id xset s 480 dpms 600 600 600

# Desktop notifications using Dunst
exec --no-startup-id dbus-launch dunst --config ~/.config/dunst/dunstrc

# Define colors variables:
set $darkbluetrans	#08052be6
set $darkblue		#08052b
set $lightblue		#5294e2
set $urgentred		#e53935
set $white		    #ffffff
set $black		    #000000
set $purple		    #e345ff
set $darkgrey		#383c4a
set $grey		    #b0b5bd
set $mediumgrey		#8b8b8b
set $yellowbrown	#e1b700

# define colors for windows:
#class		        	border		bground		text		indicator	child_border
client.focused		    	$lightblue	$darkblue	$white		$mediumgrey	$mediumgrey
client.unfocused	    	$darkblue	$darkblue	$grey		$darkgrey	$darkgrey
client.focused_inactive		$darkblue	$darkblue	$grey		$black		$black
client.urgent		    	$urgentred	$urgentred	$white		$yellowbrown	$yellowbrown


# ---------------------- Bar Setting -------------------------------

# Start i3bar to display a workspace bar
# (plus the system information i3status finds out, if available)
bar {
    font pango: Noto Sans Regular 10
    status_command i3blocks -c ~/.config/i3/i3blocks.conf
    position bottom
    i3bar_command i3bar --transparency
    tray_output primary
    tray_padding 0

# When strip_workspace_numbers is set to yes,
# any workspace that has a name of the form
# “[n][:][NAME]” will display only the name.
# strip_workspace_numbers yes
    strip_workspace_name no

    colors {
        separator          $purple
        background         $darkgrey
        statusline         $white
#                          	border 		    bg		    txt		    indicator
        focused_workspace	$mediumgrey	   	$grey		$darkgrey	$purple
        active_workspace	$lightblue      $mediumgrey	$darkgrey	$purple
        inactive_workspace	$darkgrey   	$darkgrey	$grey		$purple
        urgent_workspace	$urgentred	    $urgentred	$white		$purple
	}
}





# ---------------------- Application Menu Handled By Rofi -------------------------------

# rofi bindings to manage clipboard (install rofi-greenclip from the AUR)
# bindsym $mod+Shift+v exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard -config ~/.config/rofi/rofidmenu.rasi

bindsym $mod+Shift+v exec --no-startup-id rofi -modi "clipboard:greenclip print" -show clipboard -config ~/.config/rofi/config.rasi



for_window [class="SimpleScreenRecorder"] floating enable
for_window [class="simplescreenrecorder"] floating enable
